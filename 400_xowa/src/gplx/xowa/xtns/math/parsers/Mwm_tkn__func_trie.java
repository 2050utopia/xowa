/*
XOWA: the XOWA Offline Wiki Application
Copyright (C) 2012 gnosygnu@gmail.com

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package gplx.xowa.xtns.math.parsers; import gplx.*; import gplx.xowa.*; import gplx.xowa.xtns.*; import gplx.xowa.xtns.math.*;
import gplx.core.btries.*;
class Mwm_tkn__func_trie {
	public Btrie_slim_mgr Make() {
		Btrie_slim_mgr trie = Btrie_slim_mgr.ci_a7();
		Add(trie, Make("\\AA").Literal_().Tex_only_());
		Add(trie, Make("\\aleph").Literal_().Tex_only_());
		Add(trie, Make("\\alpha").Literal_().Tex_only_());
		Add(trie, Make("\\amalg").Literal_().Tex_only_());
		Add(trie, Make("\\And").Literal_().Tex_only_());
		Add(trie, Make("\\angle").Literal_().Tex_only_());
		Add(trie, Make("\\approx").Literal_().Tex_only_());
		Add(trie, Make("\\approxeq").Literal_().Tex_only_());
		Add(trie, Make("\\ast").Literal_().Tex_only_());
		Add(trie, Make("\\asymp").Literal_().Tex_only_());
		Add(trie, Make("\\backepsilon").Literal_().Tex_only_());
		Add(trie, Make("\\backprime").Literal_().Tex_only_());
		Add(trie, Make("\\backsim").Literal_().Tex_only_());
		Add(trie, Make("\\backsimeq").Literal_().Tex_only_());
		Add(trie, Make("\\barwedge").Literal_().Tex_only_());
		Add(trie, Make("\\Bbbk").Literal_().Tex_only_());
		Add(trie, Make("\\because").Literal_().Tex_only_());
		Add(trie, Make("\\beta").Literal_().Tex_only_());
		Add(trie, Make("\\beth").Literal_().Tex_only_());
		Add(trie, Make("\\between").Literal_().Tex_only_());
		Add(trie, Make("\\bigcap").Literal_().Tex_only_());
		Add(trie, Make("\\bigcirc").Literal_().Tex_only_());
		Add(trie, Make("\\bigcup").Literal_().Tex_only_());
		Add(trie, Make("\\bigodot").Literal_().Tex_only_());
		Add(trie, Make("\\bigoplus").Literal_().Tex_only_());
		Add(trie, Make("\\bigotimes").Literal_().Tex_only_());
		Add(trie, Make("\\bigsqcup").Literal_().Tex_only_());
		Add(trie, Make("\\bigstar").Literal_().Tex_only_());
		Add(trie, Make("\\bigtriangledown").Literal_().Tex_only_());
		Add(trie, Make("\\bigtriangleup").Literal_().Tex_only_());
		Add(trie, Make("\\biguplus").Literal_().Tex_only_());
		Add(trie, Make("\\bigvee").Literal_().Tex_only_());
		Add(trie, Make("\\bigwedge").Literal_().Tex_only_());
		Add(trie, Make("\\blacklozenge").Literal_().Tex_only_());
		Add(trie, Make("\\blacksquare").Literal_().Tex_only_());
		Add(trie, Make("\\blacktriangle").Literal_().Tex_only_());
		Add(trie, Make("\\blacktriangledown").Literal_().Tex_only_());
		Add(trie, Make("\\blacktriangleleft").Literal_().Tex_only_());
		Add(trie, Make("\\blacktriangleright").Literal_().Tex_only_());
		Add(trie, Make("\\bot").Literal_().Tex_only_());
		Add(trie, Make("\\bowtie").Literal_().Tex_only_());
		Add(trie, Make("\\Box").Literal_().Tex_only_());
		Add(trie, Make("\\boxdot").Literal_().Tex_only_());
		Add(trie, Make("\\boxminus").Literal_().Tex_only_());
		Add(trie, Make("\\boxplus").Literal_().Tex_only_());
		Add(trie, Make("\\boxtimes").Literal_().Tex_only_());
		Add(trie, Make("\\bullet").Literal_().Tex_only_());
		Add(trie, Make("\\bumpeq").Literal_().Tex_only_());
		Add(trie, Make("\\Bumpeq").Literal_().Tex_only_());
		Add(trie, Make("\\cap").Literal_().Tex_only_());
		Add(trie, Make("\\Cap").Literal_().Tex_only_());
		Add(trie, Make("\\cdot").Literal_().Tex_only_());
		Add(trie, Make("\\cdots").Literal_().Tex_only_());
		Add(trie, Make("\\centerdot").Literal_().Tex_only_());
		Add(trie, Make("\\checkmark").Literal_().Tex_only_());
		Add(trie, Make("\\chi").Literal_().Tex_only_());
		Add(trie, Make("\\circ").Literal_().Tex_only_());
		Add(trie, Make("\\circeq").Literal_().Tex_only_());
		Add(trie, Make("\\circlearrowleft").Literal_().Tex_only_());
		Add(trie, Make("\\circlearrowright").Literal_().Tex_only_());
		Add(trie, Make("\\circledast").Literal_().Tex_only_());
		Add(trie, Make("\\circledcirc").Literal_().Tex_only_());
		Add(trie, Make("\\circleddash").Literal_().Tex_only_());
		Add(trie, Make("\\circledS").Literal_().Tex_only_());
		Add(trie, Make("\\clubsuit").Literal_().Tex_only_());
		Add(trie, Make("\\colon").Literal_().Tex_only_());
		Add(trie, Make("\\color").Literal_().Tex_only_());
		Add(trie, Make("\\complement").Literal_().Tex_only_());
		Add(trie, Make("\\cong").Literal_().Tex_only_());
		Add(trie, Make("\\coprod").Literal_().Tex_only_());
		Add(trie, Make("\\cup").Literal_().Tex_only_());
		Add(trie, Make("\\Cup").Literal_().Tex_only_());
		Add(trie, Make("\\curlyeqprec").Literal_().Tex_only_());
		Add(trie, Make("\\curlyeqsucc").Literal_().Tex_only_());
		Add(trie, Make("\\curlyvee").Literal_().Tex_only_());
		Add(trie, Make("\\curlywedge").Literal_().Tex_only_());
		Add(trie, Make("\\curvearrowleft").Literal_().Tex_only_());
		Add(trie, Make("\\curvearrowright").Literal_().Tex_only_());
		Add(trie, Make("\\dagger").Literal_().Tex_only_());
		Add(trie, Make("\\daleth").Literal_().Tex_only_());
		Add(trie, Make("\\dashv").Literal_().Tex_only_());
		Add(trie, Make("\\ddagger").Literal_().Tex_only_());
		Add(trie, Make("\\ddots").Literal_().Tex_only_());
		Add(trie, Make("\\definecolor").Literal_().Tex_only_());
		Add(trie, Make("\\delta").Literal_().Tex_only_());
		Add(trie, Make("\\Delta").Literal_().Tex_only_());
		Add(trie, Make("\\diagdown").Literal_().Tex_only_());
		Add(trie, Make("\\diagup").Literal_().Tex_only_());
		Add(trie, Make("\\diamond").Literal_().Tex_only_());
		Add(trie, Make("\\Diamond").Literal_().Tex_only_());
		Add(trie, Make("\\diamondsuit").Literal_().Tex_only_());
		Add(trie, Make("\\digamma").Literal_().Tex_only_());
		Add(trie, Make("\\displaystyle").Literal_().Tex_only_());
		Add(trie, Make("\\div").Literal_().Tex_only_());
		Add(trie, Make("\\divideontimes").Literal_().Tex_only_());
		Add(trie, Make("\\doteq").Literal_().Tex_only_());
		Add(trie, Make("\\doteqdot").Literal_().Tex_only_());
		Add(trie, Make("\\dotplus").Literal_().Tex_only_());
		Add(trie, Make("\\dots").Literal_().Tex_only_());
		Add(trie, Make("\\dotsb").Literal_().Tex_only_());
		Add(trie, Make("\\dotsc").Literal_().Tex_only_());
		Add(trie, Make("\\dotsi").Literal_().Tex_only_());
		Add(trie, Make("\\dotsm").Literal_().Tex_only_());
		Add(trie, Make("\\dotso").Literal_().Tex_only_());
		Add(trie, Make("\\doublebarwedge").Literal_().Tex_only_());
		Add(trie, Make("\\downdownarrows").Literal_().Tex_only_());
		Add(trie, Make("\\downharpoonleft").Literal_().Tex_only_());
		Add(trie, Make("\\downharpoonright").Literal_().Tex_only_());
		Add(trie, Make("\\ell").Literal_().Tex_only_());
		Add(trie, Make("\\emptyset").Literal_().Tex_only_());
		Add(trie, Make("\\epsilon").Literal_().Tex_only_());
		Add(trie, Make("\\eqcirc").Literal_().Tex_only_());
		Add(trie, Make("\\eqsim").Literal_().Tex_only_());
		Add(trie, Make("\\eqslantgtr").Literal_().Tex_only_());
		Add(trie, Make("\\eqslantless").Literal_().Tex_only_());
		Add(trie, Make("\\equiv").Literal_().Tex_only_());
		Add(trie, Make("\\eta").Literal_().Tex_only_());
		Add(trie, Make("\\eth").Literal_().Tex_only_());
		Add(trie, Make("\\exists").Literal_().Tex_only_());
		Add(trie, Make("\\fallingdotseq").Literal_().Tex_only_());
		Add(trie, Make("\\Finv").Literal_().Tex_only_());
		Add(trie, Make("\\flat").Literal_().Tex_only_());
		Add(trie, Make("\\forall").Literal_().Tex_only_());
		Add(trie, Make("\\frown").Literal_().Tex_only_());
		Add(trie, Make("\\Game").Literal_().Tex_only_());
		Add(trie, Make("\\gamma").Literal_().Tex_only_());
		Add(trie, Make("\\Gamma").Literal_().Tex_only_());
		Add(trie, Make("\\geq").Literal_().Tex_only_());
		Add(trie, Make("\\geqq").Literal_().Tex_only_());
		Add(trie, Make("\\geqslant").Literal_().Tex_only_());
		Add(trie, Make("\\gets").Literal_().Tex_only_());
		Add(trie, Make("\\gg").Literal_().Tex_only_());
		Add(trie, Make("\\ggg").Literal_().Tex_only_());
		Add(trie, Make("\\gimel").Literal_().Tex_only_());
		Add(trie, Make("\\gnapprox").Literal_().Tex_only_());
		Add(trie, Make("\\gneq").Literal_().Tex_only_());
		Add(trie, Make("\\gneqq").Literal_().Tex_only_());
		Add(trie, Make("\\gnsim").Literal_().Tex_only_());
		Add(trie, Make("\\gtrapprox").Literal_().Tex_only_());
		Add(trie, Make("\\gtrdot").Literal_().Tex_only_());
		Add(trie, Make("\\gtreqless").Literal_().Tex_only_());
		Add(trie, Make("\\gtreqqless").Literal_().Tex_only_());
		Add(trie, Make("\\gtrless").Literal_().Tex_only_());
		Add(trie, Make("\\gtrsim").Literal_().Tex_only_());
		Add(trie, Make("\\gvertneqq").Literal_().Tex_only_());
		Add(trie, Make("\\hbar").Literal_().Tex_only_());
		Add(trie, Make("\\heartsuit").Literal_().Tex_only_());
		Add(trie, Make("\\hline").Literal_().Tex_only_());
		Add(trie, Make("\\hookleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\hookrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\hslash").Literal_().Tex_only_());
		Add(trie, Make("\\iff").Literal_().Tex_only_());
		Add(trie, Make("\\iiiint").Literal_().Tex_only_());
		Add(trie, Make("\\iiint").Literal_().Tex_only_());
		Add(trie, Make("\\iint").Literal_().Tex_only_());
		Add(trie, Make("\\Im").Literal_().Tex_only_());
		Add(trie, Make("\\imath").Literal_().Tex_only_());
		Add(trie, Make("\\implies").Literal_().Tex_only_());
		Add(trie, Make("\\in").Literal_().Tex_only_());
		Add(trie, Make("\\infty").Literal_().Tex_only_());
		Add(trie, Make("\\injlim").Literal_().Tex_only_());
		Add(trie, Make("\\int").Literal_().Tex_only_());
		Add(trie, Make("\\intercal").Literal_().Tex_only_());
		Add(trie, Make("\\iota").Literal_().Tex_only_());
		Add(trie, Make("\\jmath").Literal_().Tex_only_());
		Add(trie, Make("\\kappa").Literal_().Tex_only_());
		Add(trie, Make("\\lambda").Literal_().Tex_only_());
		Add(trie, Make("\\Lambda").Literal_().Tex_only_());
		Add(trie, Make("\\land").Literal_().Tex_only_());
		Add(trie, Make("\\ldots").Literal_().Tex_only_());
		Add(trie, Make("\\leftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Leftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\leftarrowtail").Literal_().Tex_only_());
		Add(trie, Make("\\leftharpoondown").Literal_().Tex_only_());
		Add(trie, Make("\\leftharpoonup").Literal_().Tex_only_());
		Add(trie, Make("\\leftleftarrows").Literal_().Tex_only_());
		Add(trie, Make("\\leftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Leftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\leftrightarrows").Literal_().Tex_only_());
		Add(trie, Make("\\leftrightharpoons").Literal_().Tex_only_());
		Add(trie, Make("\\leftrightsquigarrow").Literal_().Tex_only_());
		Add(trie, Make("\\leftthreetimes").Literal_().Tex_only_());
		Add(trie, Make("\\leq").Literal_().Tex_only_());
		Add(trie, Make("\\leqq").Literal_().Tex_only_());
		Add(trie, Make("\\leqslant").Literal_().Tex_only_());
		Add(trie, Make("\\lessapprox").Literal_().Tex_only_());
		Add(trie, Make("\\lessdot").Literal_().Tex_only_());
		Add(trie, Make("\\lesseqgtr").Literal_().Tex_only_());
		Add(trie, Make("\\lesseqqgtr").Literal_().Tex_only_());
		Add(trie, Make("\\lessgtr").Literal_().Tex_only_());
		Add(trie, Make("\\lesssim").Literal_().Tex_only_());
		Add(trie, Make("\\limits").Literal_().Tex_only_());
		Add(trie, Make("\\ll").Literal_().Tex_only_());
		Add(trie, Make("\\Lleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\lll").Literal_().Tex_only_());
		Add(trie, Make("\\lnapprox").Literal_().Tex_only_());
		Add(trie, Make("\\lneq").Literal_().Tex_only_());
		Add(trie, Make("\\lneqq").Literal_().Tex_only_());
		Add(trie, Make("\\lnot").Literal_().Tex_only_());
		Add(trie, Make("\\lnsim").Literal_().Tex_only_());
		Add(trie, Make("\\longleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Longleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\longleftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Longleftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\longmapsto").Literal_().Tex_only_());
		Add(trie, Make("\\longrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Longrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\looparrowleft").Literal_().Tex_only_());
		Add(trie, Make("\\looparrowright").Literal_().Tex_only_());
		Add(trie, Make("\\lor").Literal_().Tex_only_());
		Add(trie, Make("\\lozenge").Literal_().Tex_only_());
		Add(trie, Make("\\Lsh").Literal_().Tex_only_());
		Add(trie, Make("\\ltimes").Literal_().Tex_only_());
		Add(trie, Make("\\lVert").Literal_().Tex_only_());
		Add(trie, Make("\\lvertneqq").Literal_().Tex_only_());
		Add(trie, Make("\\mapsto").Literal_().Tex_only_());
		Add(trie, Make("\\measuredangle").Literal_().Tex_only_());
		Add(trie, Make("\\mho").Literal_().Tex_only_());
		Add(trie, Make("\\mid").Literal_().Tex_only_());
		Add(trie, Make("\\mod").Literal_().Tex_only_());
		Add(trie, Make("\\models").Literal_().Tex_only_());
		Add(trie, Make("\\mp").Literal_().Tex_only_());
		Add(trie, Make("\\mu").Literal_().Tex_only_());
		Add(trie, Make("\\multimap").Literal_().Tex_only_());
		Add(trie, Make("\\nabla").Literal_().Tex_only_());
		Add(trie, Make("\\natural").Literal_().Tex_only_());
		Add(trie, Make("\\ncong").Literal_().Tex_only_());
		Add(trie, Make("\\nearrow").Literal_().Tex_only_());
		Add(trie, Make("\\neg").Literal_().Tex_only_());
		Add(trie, Make("\\neq").Literal_().Tex_only_());
		Add(trie, Make("\\nexists").Literal_().Tex_only_());
		Add(trie, Make("\\ngeq").Literal_().Tex_only_());
		Add(trie, Make("\\ngeqq").Literal_().Tex_only_());
		Add(trie, Make("\\ngeqslant").Literal_().Tex_only_());
		Add(trie, Make("\\ngtr").Literal_().Tex_only_());
		Add(trie, Make("\\ni").Literal_().Tex_only_());
		Add(trie, Make("\\nleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nLeftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nleftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nLeftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nleq").Literal_().Tex_only_());
		Add(trie, Make("\\nleqq").Literal_().Tex_only_());
		Add(trie, Make("\\nleqslant").Literal_().Tex_only_());
		Add(trie, Make("\\nless").Literal_().Tex_only_());
		Add(trie, Make("\\nmid").Literal_().Tex_only_());
		Add(trie, Make("\\nolimits").Literal_().Tex_only_());
		Add(trie, Make("\\not").Literal_().Tex_only_());
		Add(trie, Make("\\notin").Literal_().Tex_only_());
		Add(trie, Make("\\nparallel").Literal_().Tex_only_());
		Add(trie, Make("\\nprec").Literal_().Tex_only_());
		Add(trie, Make("\\npreceq").Literal_().Tex_only_());
		Add(trie, Make("\\nrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nRightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\nshortmid").Literal_().Tex_only_());
		Add(trie, Make("\\nshortparallel").Literal_().Tex_only_());
		Add(trie, Make("\\nsim").Literal_().Tex_only_());
		Add(trie, Make("\\nsubseteq").Literal_().Tex_only_());
		Add(trie, Make("\\nsubseteqq").Literal_().Tex_only_());
		Add(trie, Make("\\nsucc").Literal_().Tex_only_());
		Add(trie, Make("\\nsucceq").Literal_().Tex_only_());
		Add(trie, Make("\\nsupseteq").Literal_().Tex_only_());
		Add(trie, Make("\\nsupseteqq").Literal_().Tex_only_());
		Add(trie, Make("\\ntriangleleft").Literal_().Tex_only_());
		Add(trie, Make("\\ntrianglelefteq").Literal_().Tex_only_());
		Add(trie, Make("\\ntriangleright").Literal_().Tex_only_());
		Add(trie, Make("\\ntrianglerighteq").Literal_().Tex_only_());
		Add(trie, Make("\\nu").Literal_().Tex_only_());
		Add(trie, Make("\\nvdash").Literal_().Tex_only_());
		Add(trie, Make("\\nVdash").Literal_().Tex_only_());
		Add(trie, Make("\\nvDash").Literal_().Tex_only_());
		Add(trie, Make("\\nVDash").Literal_().Tex_only_());
		Add(trie, Make("\\nwarrow").Literal_().Tex_only_());
		Add(trie, Make("\\odot").Literal_().Tex_only_());
		Add(trie, Make("\\oint").Literal_().Tex_only_());
		Add(trie, Make("\\omega").Literal_().Tex_only_());
		Add(trie, Make("\\Omega").Literal_().Tex_only_());
		Add(trie, Make("\\ominus").Literal_().Tex_only_());
		Add(trie, Make("\\oplus").Literal_().Tex_only_());
		Add(trie, Make("\\oslash").Literal_().Tex_only_());
		Add(trie, Make("\\otimes").Literal_().Tex_only_());
		Add(trie, Make("\\overbrace").Literal_().Tex_only_());
		Add(trie, Make("\\overleftarrow").Literal_().Tex_only_());
		Add(trie, Make("\\overleftrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\overline").Literal_().Tex_only_());
		Add(trie, Make("\\overrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\P").Literal_().Tex_only_());
		Add(trie, Make("\\pagecolor").Literal_().Tex_only_());
		Add(trie, Make("\\parallel").Literal_().Tex_only_());
		Add(trie, Make("\\partial").Literal_().Tex_only_());
		Add(trie, Make("\\perp").Literal_().Tex_only_());
		Add(trie, Make("\\phi").Literal_().Tex_only_());
		Add(trie, Make("\\Phi").Literal_().Tex_only_());
		Add(trie, Make("\\pi").Literal_().Tex_only_());
		Add(trie, Make("\\Pi").Literal_().Tex_only_());
		Add(trie, Make("\\pitchfork").Literal_().Tex_only_());
		Add(trie, Make("\\pm").Literal_().Tex_only_());
		Add(trie, Make("\\prec").Literal_().Tex_only_());
		Add(trie, Make("\\precapprox").Literal_().Tex_only_());
		Add(trie, Make("\\preccurlyeq").Literal_().Tex_only_());
		Add(trie, Make("\\preceq").Literal_().Tex_only_());
		Add(trie, Make("\\precnapprox").Literal_().Tex_only_());
		Add(trie, Make("\\precneqq").Literal_().Tex_only_());
		Add(trie, Make("\\precnsim").Literal_().Tex_only_());
		Add(trie, Make("\\precsim").Literal_().Tex_only_());
		Add(trie, Make("\\prime").Literal_().Tex_only_());
		Add(trie, Make("\\prod").Literal_().Tex_only_());
		Add(trie, Make("\\projlim").Literal_().Tex_only_());
		Add(trie, Make("\\propto").Literal_().Tex_only_());
		Add(trie, Make("\\psi").Literal_().Tex_only_());
		Add(trie, Make("\\Psi").Literal_().Tex_only_());
		Add(trie, Make("\\qquad").Literal_().Tex_only_());
		Add(trie, Make("\\quad").Literal_().Tex_only_());
		Add(trie, Make("\\Re").Literal_().Tex_only_());
		Add(trie, Make("\\rho").Literal_().Tex_only_());
		Add(trie, Make("\\rightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Rightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\rightarrowtail").Literal_().Tex_only_());
		Add(trie, Make("\\rightharpoondown").Literal_().Tex_only_());
		Add(trie, Make("\\rightharpoonup").Literal_().Tex_only_());
		Add(trie, Make("\\rightleftarrows").Literal_().Tex_only_());
		Add(trie, Make("\\rightrightarrows").Literal_().Tex_only_());
		Add(trie, Make("\\rightsquigarrow").Literal_().Tex_only_());
		Add(trie, Make("\\rightthreetimes").Literal_().Tex_only_());
		Add(trie, Make("\\risingdotseq").Literal_().Tex_only_());
		Add(trie, Make("\\Rrightarrow").Literal_().Tex_only_());
		Add(trie, Make("\\Rsh").Literal_().Tex_only_());
		Add(trie, Make("\\rtimes").Literal_().Tex_only_());
		Add(trie, Make("\\rVert").Literal_().Tex_only_());
		Add(trie, Make("\\S").Literal_().Tex_only_());
		Add(trie, Make("\\scriptscriptstyle").Literal_().Tex_only_());
		Add(trie, Make("\\scriptstyle").Literal_().Tex_only_());
		Add(trie, Make("\\searrow").Literal_().Tex_only_());
		Add(trie, Make("\\setminus").Literal_().Tex_only_());
		Add(trie, Make("\\sharp").Literal_().Tex_only_());
		Add(trie, Make("\\shortmid").Literal_().Tex_only_());
		Add(trie, Make("\\shortparallel").Literal_().Tex_only_());
		Add(trie, Make("\\sigma").Literal_().Tex_only_());
		Add(trie, Make("\\Sigma").Literal_().Tex_only_());
		Add(trie, Make("\\sim").Literal_().Tex_only_());
		Add(trie, Make("\\simeq").Literal_().Tex_only_());
		Add(trie, Make("\\smallfrown").Literal_().Tex_only_());
		Add(trie, Make("\\smallsetminus").Literal_().Tex_only_());
		Add(trie, Make("\\smallsmile").Literal_().Tex_only_());
		Add(trie, Make("\\smile").Literal_().Tex_only_());
		Add(trie, Make("\\spadesuit").Literal_().Tex_only_());
		Add(trie, Make("\\sphericalangle").Literal_().Tex_only_());
		Add(trie, Make("\\sqcap").Literal_().Tex_only_());
		Add(trie, Make("\\sqcup").Literal_().Tex_only_());
		Add(trie, Make("\\sqsubset").Literal_().Tex_only_());
		Add(trie, Make("\\sqsubseteq").Literal_().Tex_only_());
		Add(trie, Make("\\sqsupset").Literal_().Tex_only_());
		Add(trie, Make("\\sqsupseteq").Literal_().Tex_only_());
		Add(trie, Make("\\square").Literal_().Tex_only_());
		Add(trie, Make("\\star").Literal_().Tex_only_());
		Add(trie, Make("\\subset").Literal_().Tex_only_());
		Add(trie, Make("\\Subset").Literal_().Tex_only_());
		Add(trie, Make("\\subseteq").Literal_().Tex_only_());
		Add(trie, Make("\\subseteqq").Literal_().Tex_only_());
		Add(trie, Make("\\subsetneq").Literal_().Tex_only_());
		Add(trie, Make("\\subsetneqq").Literal_().Tex_only_());
		Add(trie, Make("\\succ").Literal_().Tex_only_());
		Add(trie, Make("\\succapprox").Literal_().Tex_only_());
		Add(trie, Make("\\succcurlyeq").Literal_().Tex_only_());
		Add(trie, Make("\\succeq").Literal_().Tex_only_());
		Add(trie, Make("\\succnapprox").Literal_().Tex_only_());
		Add(trie, Make("\\succneqq").Literal_().Tex_only_());
		Add(trie, Make("\\succnsim").Literal_().Tex_only_());
		Add(trie, Make("\\succsim").Literal_().Tex_only_());
		Add(trie, Make("\\sum").Literal_().Tex_only_());
		Add(trie, Make("\\supset").Literal_().Tex_only_());
		Add(trie, Make("\\Supset").Literal_().Tex_only_());
		Add(trie, Make("\\supseteq").Literal_().Tex_only_());
		Add(trie, Make("\\supseteqq").Literal_().Tex_only_());
		Add(trie, Make("\\supsetneq").Literal_().Tex_only_());
		Add(trie, Make("\\supsetneqq").Literal_().Tex_only_());
		Add(trie, Make("\\surd").Literal_().Tex_only_());
		Add(trie, Make("\\swarrow").Literal_().Tex_only_());
		Add(trie, Make("\\tau").Literal_().Tex_only_());
		Add(trie, Make("\\textstyle").Literal_().Tex_only_());
		Add(trie, Make("\\textvisiblespace").Literal_().Tex_only_());
		Add(trie, Make("\\therefore").Literal_().Tex_only_());
		Add(trie, Make("\\theta").Literal_().Tex_only_());
		Add(trie, Make("\\Theta").Literal_().Tex_only_());
		Add(trie, Make("\\thickapprox").Literal_().Tex_only_());
		Add(trie, Make("\\thicksim").Literal_().Tex_only_());
		Add(trie, Make("\\times").Literal_().Tex_only_());
		Add(trie, Make("\\to").Literal_().Tex_only_());
		Add(trie, Make("\\top").Literal_().Tex_only_());
		Add(trie, Make("\\triangle").Literal_().Tex_only_());
		Add(trie, Make("\\triangledown").Literal_().Tex_only_());
		Add(trie, Make("\\triangleleft").Literal_().Tex_only_());
		Add(trie, Make("\\trianglelefteq").Literal_().Tex_only_());
		Add(trie, Make("\\triangleq").Literal_().Tex_only_());
		Add(trie, Make("\\triangleright").Literal_().Tex_only_());
		Add(trie, Make("\\trianglerighteq").Literal_().Tex_only_());
		Add(trie, Make("\\underbrace").Literal_().Tex_only_());
		Add(trie, Make("\\underline").Literal_().Tex_only_());
		Add(trie, Make("\\upharpoonleft").Literal_().Tex_only_());
		Add(trie, Make("\\upharpoonright").Literal_().Tex_only_());
		Add(trie, Make("\\uplus").Literal_().Tex_only_());
		Add(trie, Make("\\upsilon").Literal_().Tex_only_());
		Add(trie, Make("\\Upsilon").Literal_().Tex_only_());
		Add(trie, Make("\\upuparrows").Literal_().Tex_only_());
		Add(trie, Make("\\varepsilon").Literal_().Tex_only_());
		Add(trie, Make("\\varinjlim").Literal_().Tex_only_());
		Add(trie, Make("\\varkappa").Literal_().Tex_only_());
		Add(trie, Make("\\varliminf").Literal_().Tex_only_());
		Add(trie, Make("\\varlimsup").Literal_().Tex_only_());
		Add(trie, Make("\\varnothing").Literal_().Tex_only_());
		Add(trie, Make("\\varphi").Literal_().Tex_only_());
		Add(trie, Make("\\varpi").Literal_().Tex_only_());
		Add(trie, Make("\\varprojlim").Literal_().Tex_only_());
		Add(trie, Make("\\varpropto").Literal_().Tex_only_());
		Add(trie, Make("\\varrho").Literal_().Tex_only_());
		Add(trie, Make("\\varsigma").Literal_().Tex_only_());
		Add(trie, Make("\\varsubsetneq").Literal_().Tex_only_());
		Add(trie, Make("\\varsubsetneqq").Literal_().Tex_only_());
		Add(trie, Make("\\varsupsetneq").Literal_().Tex_only_());
		Add(trie, Make("\\varsupsetneqq").Literal_().Tex_only_());
		Add(trie, Make("\\vartheta").Literal_().Tex_only_());
		Add(trie, Make("\\vartriangle").Literal_().Tex_only_());
		Add(trie, Make("\\vartriangleleft").Literal_().Tex_only_());
		Add(trie, Make("\\vartriangleright").Literal_().Tex_only_());
		Add(trie, Make("\\vdash").Literal_().Tex_only_());
		Add(trie, Make("\\Vdash").Literal_().Tex_only_());
		Add(trie, Make("\\vDash").Literal_().Tex_only_());
		Add(trie, Make("\\vdots").Literal_().Tex_only_());
		Add(trie, Make("\\vee").Literal_().Tex_only_());
		Add(trie, Make("\\veebar").Literal_().Tex_only_());
		Add(trie, Make("\\vline").Literal_().Tex_only_());
		Add(trie, Make("\\Vvdash").Literal_().Tex_only_());
		Add(trie, Make("\\wedge").Literal_().Tex_only_());
		Add(trie, Make("\\widehat").Literal_().Tex_only_());
		Add(trie, Make("\\widetilde").Literal_().Tex_only_());
		Add(trie, Make("\\wp").Literal_().Tex_only_());
		Add(trie, Make("\\wr").Literal_().Tex_only_());
		Add(trie, Make("\\xi").Literal_().Tex_only_());
		Add(trie, Make("\\Xi").Literal_().Tex_only_());
		Add(trie, Make("\\zeta").Literal_().Tex_only_());
		Add(trie, Make("\\big").Big_());
		Add(trie, Make("\\Big").Big_());
		Add(trie, Make("\\bigg").Big_());
		Add(trie, Make("\\Bigg").Big_());
		Add(trie, Make("\\biggl").Big_());
		Add(trie, Make("\\Biggl").Big_());
		Add(trie, Make("\\biggr").Big_());
		Add(trie, Make("\\Biggr").Big_());
		Add(trie, Make("\\bigl").Big_());
		Add(trie, Make("\\Bigl").Big_());
		Add(trie, Make("\\bigr").Big_());
		Add(trie, Make("\\Bigr").Big_());
		Add(trie, Make("\\backslash").Delimiter_().Tex_only_());
		Add(trie, Make("\\downarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\Downarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\langle").Delimiter_().Tex_only_());
		Add(trie, Make("\\lbrace").Delimiter_().Tex_only_());
		Add(trie, Make("\\lceil").Delimiter_().Tex_only_());
		Add(trie, Make("\\lfloor").Delimiter_().Tex_only_());
		Add(trie, Make("\\llcorner").Delimiter_().Tex_only_());
		Add(trie, Make("\\lrcorner").Delimiter_().Tex_only_());
		Add(trie, Make("\\rangle").Delimiter_().Tex_only_());
		Add(trie, Make("\\rbrace").Delimiter_().Tex_only_());
		Add(trie, Make("\\rceil").Delimiter_().Tex_only_());
		Add(trie, Make("\\rfloor").Delimiter_().Tex_only_());
		Add(trie, Make("\\rightleftharpoons").Delimiter_().Tex_only_());
		Add(trie, Make("\\twoheadleftarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\twoheadrightarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\ulcorner").Delimiter_().Tex_only_());
		Add(trie, Make("\\uparrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\Uparrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\updownarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\Updownarrow").Delimiter_().Tex_only_());
		Add(trie, Make("\\urcorner").Delimiter_().Tex_only_());
		Add(trie, Make("\\Vert").Delimiter_().Tex_only_());
		Add(trie, Make("\\vert").Delimiter_().Tex_only_());
		Add(trie, Make("\\lbrack").Delimiter_().Tex_only_());
		Add(trie, Make("\\rbrack").Delimiter_().Tex_only_());
		Add(trie, Make("\\acute").Fun_ar1_());
		Add(trie, Make("\\bar").Fun_ar1_());
		Add(trie, Make("\\bcancel").Fun_ar1_());
		Add(trie, Make("\\bmod").Fun_ar1_());
		Add(trie, Make("\\boldsymbol").Fun_ar1_());
		Add(trie, Make("\\breve").Fun_ar1_());
		Add(trie, Make("\\cancel").Fun_ar1_());
		Add(trie, Make("\\check").Fun_ar1_());
		Add(trie, Make("\\ddot").Fun_ar1_());
		Add(trie, Make("\\dot").Fun_ar1_());
		Add(trie, Make("\\emph").Fun_ar1_());
		Add(trie, Make("\\grave").Fun_ar1_());
		Add(trie, Make("\\hat").Fun_ar1_());
		Add(trie, Make("\\mathbb").Fun_ar1_());
		Add(trie, Make("\\mathbf").Fun_ar1_());
		Add(trie, Make("\\mathbin").Fun_ar1_());
		Add(trie, Make("\\mathcal").Fun_ar1_());
		Add(trie, Make("\\mathclose").Fun_ar1_());
		Add(trie, Make("\\mathfrak").Fun_ar1_());
		Add(trie, Make("\\mathit").Fun_ar1_());
		Add(trie, Make("\\mathop").Fun_ar1_());
		Add(trie, Make("\\mathopen").Fun_ar1_());
		Add(trie, Make("\\mathord").Fun_ar1_());
		Add(trie, Make("\\mathpunct").Fun_ar1_());
		Add(trie, Make("\\mathrel").Fun_ar1_());
		Add(trie, Make("\\mathrm").Fun_ar1_());
		Add(trie, Make("\\mathsf").Fun_ar1_());
		Add(trie, Make("\\mathtt").Fun_ar1_());
		Add(trie, Make("\\operatorname").Fun_ar1_());
		Add(trie, Make("\\pmod").Fun_ar1_());
		Add(trie, Make("\\sqrt").Fun_ar1_());
		Add(trie, Make("\\textbf").Fun_ar1_());
		Add(trie, Make("\\textit").Fun_ar1_());
		Add(trie, Make("\\textrm").Fun_ar1_());
		Add(trie, Make("\\textsf").Fun_ar1_());
		Add(trie, Make("\\texttt").Fun_ar1_());
		Add(trie, Make("\\tilde").Fun_ar1_());
		Add(trie, Make("\\vec").Fun_ar1_());
		Add(trie, Make("\\xcancel").Fun_ar1_());
		Add(trie, Make("\\xleftarrow").Fun_ar1_());
		Add(trie, Make("\\xrightarrow").Fun_ar1_());
		Add(trie, Make("\\binom").Fun_ar2_());
		Add(trie, Make("\\cancelto").Fun_ar2_());
		Add(trie, Make("\\cfrac").Fun_ar2_());
		Add(trie, Make("\\dbinom").Fun_ar2_());
		Add(trie, Make("\\dfrac").Fun_ar2_());
		Add(trie, Make("\\frac").Fun_ar2_());
		Add(trie, Make("\\overset").Fun_ar2_());
		Add(trie, Make("\\stackrel").Fun_ar2_());
		Add(trie, Make("\\tbinom").Fun_ar2_());
		Add(trie, Make("\\tfrac").Fun_ar2_());
		Add(trie, Make("\\underset").Fun_ar2_());
		Add(trie, Make("\\atop").Fun_infix_());
		Add(trie, Make("\\choose").Fun_infix_());
		Add(trie, Make("\\over").Fun_infix_());
		Add(trie, Make("\\Coppa").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\coppa").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\Digamma").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\euro").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\geneuro").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\geneuronarrow").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\geneurowide").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\Koppa").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\koppa").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\officialeuro").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\Sampi").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\sampi").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\Stigma").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\stigma").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\varstigma").Literal_().Tex_only_().Manual_("\\mbox{~0}"));
		Add(trie, Make("\\C").Literal_().Tex_only_().Manual_("\\mathbb{C}"));
		Add(trie, Make("\\H").Literal_().Tex_only_().Manual_("\\mathbb{H}"));
		Add(trie, Make("\\N").Literal_().Tex_only_().Manual_("\\mathbb{N}"));
		Add(trie, Make("\\Q").Literal_().Tex_only_().Manual_("\\mathbb{Q}"));
		Add(trie, Make("\\R").Literal_().Tex_only_().Manual_("\\mathbb{R}"));
		Add(trie, Make("\\Z").Literal_().Tex_only_().Manual_("\\mathbb{Z}"));
		Add(trie, Make("\\darr").Delimiter_().Tex_only_().Manual_("\\downarrow"));
		Add(trie, Make("\\dArr").Delimiter_().Tex_only_().Manual_("\\Downarrow"));
		Add(trie, Make("\\Darr").Delimiter_().Tex_only_().Manual_("\\Downarrow"));
		Add(trie, Make("\\lang").Delimiter_().Tex_only_().Manual_("\\langle"));
		Add(trie, Make("\\rang").Delimiter_().Tex_only_().Manual_("\\rangle"));
		Add(trie, Make("\\uarr").Delimiter_().Tex_only_().Manual_("\\uparrow"));
		Add(trie, Make("\\uArr").Delimiter_().Tex_only_().Manual_("\\Uparrow"));
		Add(trie, Make("\\Uarr").Delimiter_().Tex_only_().Manual_("\\Uparrow"));
		Add(trie, Make("\\Bbb").Fun_ar1_().Manual_("\\mathbb"));
		Add(trie, Make("\\bold").Fun_ar1_().Manual_("\\mathbf"));
		Add(trie, Make("\\alef").Literal_().Tex_only_().Manual_("\\aleph"));
		Add(trie, Make("\\alefsym").Literal_().Tex_only_().Manual_("\\aleph"));
		Add(trie, Make("\\Alpha").Literal_().Tex_only_().Manual_("\\mathrm{A}"));
		Add(trie, Make("\\and").Literal_().Tex_only_().Manual_("\\land"));
		Add(trie, Make("\\ang").Literal_().Tex_only_().Manual_("\\angle"));
		Add(trie, Make("\\Beta").Literal_().Tex_only_().Manual_("\\mathrm{B}"));
		Add(trie, Make("\\bull").Literal_().Tex_only_().Manual_("\\bullet"));
		Add(trie, Make("\\Chi").Literal_().Tex_only_().Manual_("\\mathrm{X}"));
		Add(trie, Make("\\clubs").Literal_().Tex_only_().Manual_("\\clubsuit"));
		Add(trie, Make("\\cnums").Literal_().Tex_only_().Manual_("\\mathbb{C}"));
		Add(trie, Make("\\Complex").Literal_().Tex_only_().Manual_("\\mathbb{C}"));
		Add(trie, Make("\\Dagger").Literal_().Tex_only_().Manual_("\\ddagger"));
		Add(trie, Make("\\diamonds").Literal_().Tex_only_().Manual_("\\diamondsuit"));
		Add(trie, Make("\\Doteq").Literal_().Tex_only_().Manual_("\\doteqdot"));
		Add(trie, Make("\\doublecap").Literal_().Tex_only_().Manual_("\\Cap"));
		Add(trie, Make("\\doublecup").Literal_().Tex_only_().Manual_("\\Cup"));
		Add(trie, Make("\\empty").Literal_().Tex_only_().Manual_("\\emptyset"));
		Add(trie, Make("\\Epsilon").Literal_().Tex_only_().Manual_("\\mathrm{E}"));
		Add(trie, Make("\\Eta").Literal_().Tex_only_().Manual_("\\mathrm{H}"));
		Add(trie, Make("\\exist").Literal_().Tex_only_().Manual_("\\exists"));
		Add(trie, Make("\\ge").Literal_().Tex_only_().Manual_("\\geq"));
		Add(trie, Make("\\gggtr").Literal_().Tex_only_().Manual_("\\ggg"));
		Add(trie, Make("\\hAar").Literal_().Tex_only_().Manual_("\\Leftrightarrow"));
		Add(trie, Make("\\harr").Literal_().Tex_only_().Manual_("\\leftrightarrow"));
		Add(trie, Make("\\Harr").Literal_().Tex_only_().Manual_("\\Leftrightarrow"));
		Add(trie, Make("\\hearts").Literal_().Tex_only_().Manual_("\\heartsuit"));
		Add(trie, Make("\\image").Literal_().Tex_only_().Manual_("\\Im"));
		Add(trie, Make("\\infin").Literal_().Tex_only_().Manual_("\\infty"));
		Add(trie, Make("\\Iota").Literal_().Tex_only_().Manual_("\\mathrm{I}"));
		Add(trie, Make("\\isin").Literal_().Tex_only_().Manual_("\\in"));
		Add(trie, Make("\\Kappa").Literal_().Tex_only_().Manual_("\\mathrm{K}"));
		Add(trie, Make("\\larr").Literal_().Tex_only_().Manual_("\\leftarrow"));
		Add(trie, Make("\\Larr").Literal_().Tex_only_().Manual_("\\Leftarrow"));
		Add(trie, Make("\\lArr").Literal_().Tex_only_().Manual_("\\Leftarrow"));
		Add(trie, Make("\\le").Literal_().Tex_only_().Manual_("\\leq"));
		Add(trie, Make("\\lrarr").Literal_().Tex_only_().Manual_("\\leftrightarrow"));
		Add(trie, Make("\\Lrarr").Literal_().Tex_only_().Manual_("\\Leftrightarrow"));
		Add(trie, Make("\\lrArr").Literal_().Tex_only_().Manual_("\\Leftrightarrow"));
		Add(trie, Make("\\Mu").Literal_().Tex_only_().Manual_("\\mathrm{M}"));
		Add(trie, Make("\\natnums").Literal_().Tex_only_().Manual_("\\mathbb{N}"));
		Add(trie, Make("\\ne").Literal_().Tex_only_().Manual_("\\neq"));
		Add(trie, Make("\\Nu").Literal_().Tex_only_().Manual_("\\mathrm{N}"));
		Add(trie, Make("\\O").Literal_().Tex_only_().Manual_("\\emptyset"));
		Add(trie, Make("\\omicron").Literal_().Tex_only_().Manual_("\\mathrm{o}"));
		Add(trie, Make("\\Omicron").Literal_().Tex_only_().Manual_("\\mathrm{O}"));
		Add(trie, Make("\\or").Literal_().Tex_only_().Manual_("\\lor"));
		Add(trie, Make("\\part").Literal_().Tex_only_().Manual_("\\partial"));
		Add(trie, Make("\\plusmn").Literal_().Tex_only_().Manual_("\\pm"));
		Add(trie, Make("\\rarr").Literal_().Tex_only_().Manual_("\\rightarrow"));
		Add(trie, Make("\\Rarr").Literal_().Tex_only_().Manual_("\\Rightarrow"));
		Add(trie, Make("\\rArr").Literal_().Tex_only_().Manual_("\\Rightarrow"));
		Add(trie, Make("\\real").Literal_().Tex_only_().Manual_("\\Re"));
		Add(trie, Make("\\reals").Literal_().Tex_only_().Manual_("\\mathbb{R}"));
		Add(trie, Make("\\Reals").Literal_().Tex_only_().Manual_("\\mathbb{R}"));
		Add(trie, Make("\\restriction").Literal_().Tex_only_().Manual_("\\upharpoonright"));
		Add(trie, Make("\\Rho").Literal_().Tex_only_().Manual_("\\mathrm{P}"));
		Add(trie, Make("\\sdot").Literal_().Tex_only_().Manual_("\\cdot"));
		Add(trie, Make("\\sect").Literal_().Tex_only_().Manual_("\\S"));
		Add(trie, Make("\\spades").Literal_().Tex_only_().Manual_("\\spadesuit"));
		Add(trie, Make("\\sub").Literal_().Tex_only_().Manual_("\\subset"));
		Add(trie, Make("\\sube").Literal_().Tex_only_().Manual_("\\subseteq"));
		Add(trie, Make("\\supe").Literal_().Tex_only_().Manual_("\\supseteq"));
		Add(trie, Make("\\Tau").Literal_().Tex_only_().Manual_("\\mathrm{T}"));
		Add(trie, Make("\\thetasym").Literal_().Tex_only_().Manual_("\\vartheta"));
		Add(trie, Make("\\varcoppa").Literal_().Tex_only_().Manual_("\\mbox{coppa}"));
		Add(trie, Make("\\weierp").Literal_().Tex_only_().Manual_("\\wp"));
		Add(trie, Make("\\Zeta").Literal_().Tex_only_().Manual_("\\mathrm{Z}"));
		Add(trie, Make("\\rm").Declh_().Fontforce_rm_());
		Add(trie, Make("\\it").Declh_().Fontforce_rm_());
		Add(trie, Make("\\cal").Declh_().Fontforce_rm_());
		Add(trie, Make("\\bf").Declh_().Fontforce_rm_());
		Add(trie, Make("\\sideset").Fun_ar2nb_().Manual_("\\sideset "));
		Add(trie, Make("\\left").Left_());
		Add(trie, Make("\\right").Right_());
		Add(trie, Make("\\text").Fail_());
		Add(trie, Make("\\mbox").Fail_());
		Add(trie, Make("\\vbox").Fail_());
		Add(trie, Make("\\hbox").Fail_());
		Add(trie, Make("\\arccos").Type_latex_());
		Add(trie, Make("\\arcsin").Type_latex_());
		Add(trie, Make("\\arctan").Type_latex_());
		Add(trie, Make("\\arg").Type_latex_());
		Add(trie, Make("\\cos").Type_latex_());
		Add(trie, Make("\\cosh").Type_latex_());
		Add(trie, Make("\\cot").Type_latex_());
		Add(trie, Make("\\coth").Type_latex_());
		Add(trie, Make("\\csc").Type_latex_());
		Add(trie, Make("\\deg").Type_latex_());
		Add(trie, Make("\\det").Type_latex_());
		Add(trie, Make("\\dim").Type_latex_());
		Add(trie, Make("\\exp").Type_latex_());
		Add(trie, Make("\\gcd").Type_latex_());
		Add(trie, Make("\\hom").Type_latex_());
		Add(trie, Make("\\inf").Type_latex_());
		Add(trie, Make("\\ker").Type_latex_());
		Add(trie, Make("\\lg").Type_latex_());
		Add(trie, Make("\\lim").Type_latex_());
		Add(trie, Make("\\liminf").Type_latex_());
		Add(trie, Make("\\limsup").Type_latex_());
		Add(trie, Make("\\ln").Type_latex_());
		Add(trie, Make("\\log").Type_latex_());
		Add(trie, Make("\\max").Type_latex_());
		Add(trie, Make("\\min").Type_latex_());
		Add(trie, Make("\\Pr").Type_latex_());
		Add(trie, Make("\\sec").Type_latex_());
		Add(trie, Make("\\sin").Type_latex_());
		Add(trie, Make("\\sinh").Type_latex_());
		Add(trie, Make("\\sup").Type_latex_());
		Add(trie, Make("\\tan").Type_latex_());
		Add(trie, Make("\\tanh").Type_latex_());
		Add(trie, Make("\\arccot").Type_mw_());
		Add(trie, Make("\\arcsec").Type_mw_());
		Add(trie, Make("\\arccsc").Type_mw_());
		Add(trie, Make("\\sgn").Type_mw_());
		Add(trie, Make("\\sen").Type_mw_());
		return trie;
	}
	private Mwm_tkn__func Make(String key) {return new Mwm_tkn__func(Bry_.new_a7(key));}	// NOTE: TEX func names are ASCII
	private void Add(Btrie_slim_mgr trie, Mwm_tkn__func tkn) {trie.Add_obj(tkn.Key(), tkn);}
}
